name: Build Android APK
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build:
    runs-on: ubuntu-22.04
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          git \
          zip \
          unzip \
          openjdk-11-jdk \
          autoconf \
          libtool \
          pkg-config \
          zlib1g-dev \
          libncurses5-dev \
          libncursesw5-dev \
          cmake \
          libffi-dev \
          libssl-dev \
          python3-pip \
          python3-setuptools
          
    - name: Install Buildozer
      run: |
        python -m pip install --upgrade pip
        pip install buildozer
        pip install cython==0.29.33
        
    - name: Fix buildozer.spec conflicts
      run: |
        echo "üîß Correction des conflits dans buildozer.spec..."
        
        # Supprimer version.regex si version existe
        if grep -q "^version = " buildozer.spec && grep -q "version.regex" buildozer.spec; then
          echo "‚ö†Ô∏è  Suppression de version.regex (conflit avec version)"
          sed -i '/version.regex/d' buildozer.spec
          sed -i '/version.filename/d' buildozer.spec
        fi
        
        # Remplacer android.bootstrap par p4a.bootstrap
        if grep -q "android.bootstrap" buildozer.spec; then
          echo "‚ö†Ô∏è  Remplacement de android.bootstrap par p4a.bootstrap"
          sed -i 's/android.bootstrap/p4a.bootstrap/g' buildozer.spec
        fi
        
        # Forcer une version stable des build-tools
        if ! grep -q "android.api = " buildozer.spec; then
          echo "android.api = 33" >> buildozer.spec
        fi
        if ! grep -q "android.minapi = " buildozer.spec; then
          echo "android.minapi = 21" >> buildozer.spec
        fi
        if ! grep -q "android.sdk = " buildozer.spec; then
          echo "android.sdk = 33" >> buildozer.spec
        fi
        if ! grep -q "android.ndk = " buildozer.spec; then
          echo "android.ndk = 25b" >> buildozer.spec
        fi
        
        echo "‚úÖ buildozer.spec corrig√©"
        
    - name: Accept Android SDK licenses
      run: |
        echo "üìù Acceptation automatique des licences Android SDK..."
        mkdir -p $HOME/.buildozer/android/platform/android-sdk/licenses
        
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
        echo "d56f5187479451eabf01fb78af6dfcb131a6481e" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
        echo "24333f8a63b6825ea9c5514f83c2829b004d1fee" >> $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-license
        
        echo "84831b9409646a918e30573bab4c9c91346d8abd" > $HOME/.buildozer/android/platform/android-sdk/licenses/android-sdk-preview-license
        
        echo "d975f751698a77b662f1254ddbeed3901e976f5a" > $HOME/.buildozer/android/platform/android-sdk/licenses/intel-android-extra-license
        
        echo "‚úÖ Licences pr√©-accept√©es"
        
    - name: Setup Android SDK environment
      run: |
        echo "üîß Configuration de l'environnement Android SDK..."
        
        # Cr√©er les variables d'environnement
        echo "ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk" >> $GITHUB_ENV
        echo "PATH=$PATH:$HOME/.buildozer/android/platform/android-sdk/tools:$HOME/.buildozer/android/platform/android-sdk/platform-tools" >> $GITHUB_ENV
        
    - name: Build APK
      run: |
        mkdir -p bin
        
        # D√©finir les variables d'environnement pour le build
        export ANDROID_HOME=$HOME/.buildozer/android/platform/android-sdk
        export ANDROID_SDK_ROOT=$HOME/.buildozer/android/platform/android-sdk
        
        echo "üèóÔ∏è  D√©marrage de la construction de l'APK..."
        buildozer -v android debug 2>&1 | tee build.log
        
        if ls bin/*.apk 1> /dev/null 2>&1; then
          echo "‚úÖ APK cr√©√© avec succ√®s"
          ls -lh bin/
        else
          echo "‚ùå √âchec de cr√©ation de l'APK"
          echo "üìã Derni√®res lignes du log:"
          tail -50 build.log
          exit 1
        fi
        
    - name: Upload APK
      uses: actions/upload-artifact@v4
      if: success()
      with:
        name: LeTousgestions-APK
        path: bin/*.apk
        retention-days: 30
        
    - name: Upload build log
      uses: actions/upload-artifact@v4
      if: failure()
      with:
        name: build-log
        path: build.log
        retention-days: 7
